class Solution {
public:


    /*********************************************************************/
    /*  罗马数字采用七个罗马字母作数字，
    /*  即Ⅰ（1）、X（10）、C（100）、M（1000）、V（5）、L（50）、D（500）
    /*  记数的方法：
    /*  相同的数字连写，所表示的数等于这些数字相加得到的数，如 Ⅲ=3；
    /*  小的数字在大的数字的右边，所表示的数等于这些数字相加得到的数，
    /*  如 Ⅷ = 8 、Ⅻ = 12；
    /*  小的数字（限于Ⅰ、X 和 C）在大的数字的左边，所表示的数等于大数
    /*  减小数得到的数，如 Ⅳ = 4、Ⅸ = 9；
    /*  在一个数的上面画一条横线，表示这个数增值 1,000 倍，如 = 5,000。
    /*********************************************************************/
    int romanToInt(string s) {
        unordered_map<char, int> T = {  { 'I' , 1 },
                                        { 'V' , 5 },
                                        { 'X' , 10 },
                                        { 'L' , 50 },
                                        { 'C' , 100 },
                                        { 'D' , 500 },
                                        { 'M' , 1000 } };

       int sum = T[s.back()];
       for (int i = s.size() - 2; i >= 0; --i) {
           if (T[s[i]] < T[s[i + 1]]) {
               sum -= T[s[i]];
           } else {
               sum += T[s[i]];
           }
       }
    
       return sum;
    }
};